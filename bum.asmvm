.DATA
bum = "BUUUUUUUUuuuuuuuummmm....!"
.CODE

main: PRINT "Bomba armada:\n" ; Programa simples para demonstração do Timer.
MV R1 10                      ; Vamos fazer uma contagem regressiva de 10 segundos.
loop: PRINT R1 "\n"           ; Imprime o valor do contador de segundos.
PUSH 1000                     ; Passagem de parâmetro para o Timer. Espera 1000 milissegundmos (1 segundo).
SYSCALL 6 R2                  ; Timer.
DEC R1                        ; Decrementa o contador.
JNZ R1 loop                   ; Repete até o contador chegar a 0.

; Vamos agora imprimir a string bum letra por letra aguardando um tempo variável 
; entre as letras para dar um efeito de onomatopéia de explosão.

MV R1 0                       ; offset do endereço para pegar a primeira letra do bum.
MV R2 ST                      ; Guarda o endereço na pilha para uma string de uma letra só. O segundo byte guarda sempre o número zero, que indica que a string acabou.
PUSHN 2                       ; Cria o espaço de 2 bytes na pilha (um byte para a letra e outro para o terminador da string, ou seja, um byte com valor fixo 0).
proxima_letra: LD1 R3 bum[R1] ; Pega somente o byte da string bum na posição R1 e coloca em R3.
ST1 R3 R2[0]                  ; Salva a string temporária na pilha usando a letra que está em R3... 
ST1 0 R2[1]                   ; seguida do terminador zero. Isso cria a string "B" inicialmente, depois "U" e assim sucessivamente.
SPRINT R2                     ; Imprime a string passando o endereço do inicio das letras.
INC R1                        ; Incrementa R1 para pegar a próxima letra.
SUB 26 R1 R3                  ; bum tem 26 letras. Na última R3 terá o valor 0 e podemos parar o programa.
MUL R1 R1 R4                  ; Vamos usar o valor de R1 para computar o tempo em milissegundos para esperar entre uma letra e outra. Este tempo vai aumentar a cada letra.
ADD R4 10 R4                  ; Soma mais 10 milissegundos para não ficar tão rápido no início. O tempo obedece a equação T = R1^2 + 10.
PUSH R4                       ; Chama o Timer passando a quantidade de tempo em milissegundos para esperar.
SYSCALL 6 R5                  ; Timer.
JNZ R3 proxima_letra          ; Repete enquanto não chegar o fim da string bum.
POPN 2                        ; Libera o espaço na pilha.
EXIT 0                        ; Fim do programa.
